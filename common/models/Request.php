<?php

namespace common\models;

use Codeception\Lib\Interfaces\ActiveRecord;
use Yii;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;


/**
 * This is the model class for table "request".
 *
 * @property integer $tracking_number
 * @property string $date_requested
 * @property string $date_needed
 * @property string $quantity
 * @property string $description
 * @property integer $delivery_status
 * @property integer $user_id
 * @property integer $supply
 * @property string $vehicle_plate_number
 *
 * @property DeliveryStatus $deliveryStatus
 * @property User $user
 * @property VehicleHasDriver $vehiclePlateNumber
 * @property WarehouseHasSupply $supply0
 */
class Request extends \yii\db\ActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'request';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['description'], 'string'],
            [['supply',], 'required'],
            [['delivery_status', 'user_id', 'supply'], 'integer'],
            [['date_requested', 'date_needed', 'quantity'], 'string', 'max' => 45],
            [['vehicle_plate_number'], 'string', 'max' => 10],
            [['delivery_status'], 'exist', 'skipOnError' => true, 'targetClass' => DeliveryStatus::className(), 'targetAttribute' => ['delivery_status' => 'id']],
            [['user_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::className(), 'targetAttribute' => ['user_id' => 'id']],
            [['vehicle_plate_number'], 'exist', 'skipOnError' => true, 'targetClass' => VehicleHasDriver::className(), 'targetAttribute' => ['vehicle_plate_number' => 'vehicle_plate_number']],
            [['supply'], 'exist', 'skipOnError' => true, 'targetClass' => WarehouseHasSupply::className(), 'targetAttribute' => ['supply' => 'supply_list_of_supply_code']],
            [['delivery_status'], 'required', 'on' => 'confirmation'],
            [['delivery_status'], 'required', 'on' => 'intransiting'],
            [['delivery_status'], 'required', 'on' => 'delivering'],
            [['vehicle_plate_number'],'required', 'on' => 'updatereply'],

        ];
    }

    public function behaviors()
    {
        return [
            // Other behaviors
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'date_requested',
                'updatedAtAttribute' => false,
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    public function scenarios()
    {
        $scenarios = parent::scenarios(); // TODO: Change the autogenerated stub
        $scenarios['confirmation'] = ['delivery_status'];
        $scenarios['intransiting'] = ['delivery_status'];
        $scenarios['updatereply'] = ['vehicle_plate_numner'];
        $scenarios['arriving'] = ['delivery_status'];

        return $scenarios;
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'tracking_number' => 'Tracking Number',
            'date_requested' => 'Date Requested',
            'date_needed' => 'Date Needed',
            'quantity' => 'Quantity',
            'description' => 'Weight',
            'delivery_status' => 'Delivery Status',
            'user_id' => 'User',
            'supply' => 'Supply',
            'vehicle_plate_number' => 'Vehicle Plate Number',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getDeliveryStatus()
    {
        return $this->hasOne(DeliveryStatus::className(), ['id' => 'delivery_status']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getUser()
    {
        return $this->hasOne(User::className(), ['id' => 'user_id']);
    }



    /**
     * @return \yii\db\ActiveQuery
     */
    public function getVehiclePlateNumber()
    {
        return $this->hasOne(VehicleHasDriver::className(), ['vehicle_plate_number' => 'vehicle_plate_number']);
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getSupply0()
    {
        return $this->hasOne(WarehouseHasSupply::className(), ['supply_list_of_supply_code' => 'supply']);
    }


}
